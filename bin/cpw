#!/usr/bin/env ruby
require 'cpw'
require 'gli'

include GLI::App

program_desc 'Content Processing Workflow (CPW) is an automted process to digest content.'

version CPW::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Describe server here'
arg_name 'Describe arguments to server here'
command :server do |server|
  server.desc 'Describe a switch to server'
  server.switch :s

  server.desc 'Describe a flag to server'
  server.default_value 'default'
  server.flag :f

  server.desc 'Describe start here'
  server.arg_name 'Describe arguments to start here'
  server.command :start do |start|
    start.action do |global_options,options,args|
      puts "starting server..."
      CPW::Server.new.spawn
    end
  end

  server.desc 'Describe stop here'
  server.arg_name 'Describe arguments to stop here'
  server.command :stop do |stop|
    stop.action do |global_options,options,args|
      puts "stop server command ran"
    end
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
