#!/usr/bin/env ruby
require 'cpw'
require 'gli'

include GLI::App

program_desc 'Content Processing Workflow (CPW) is an automated process to ingest audio.'

version CPW::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:s, :switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f, :flagname]

desc 'Start console'
command [:c, :console] do |console|
  console.action do |global_options, options, args|
    require 'irb'

    ARGV.clear
    IRB.start
  end
end

desc 'Start CPW server'
command [:s, :server] do |server|
  server.action do |global_options, options, args|
    require 'shoryuken/cli'
    require_relative '../config/initializers/shoryuken'

    argv = options.reject {|k, v| !k.is_a?(String)}
    argv = argv.inject({}) {|r, h| r[h[0].length > 1 ? "--#{h[0]}" : "-#{h[0]}"] = h.last; r}
    argv = argv.reject {|k, v| !v}
    argv = argv.to_a.flatten

    CPW::logger.info "Arguments: #{argv.inspect}"
    ::Shoryuken::CLI.instance.run(argv)
  end

  #-C, --config PATH
  server.desc 'Path to YAML config file'
  server.default_value 'config/shoryuken.yml'
  server.arg_name 'PATH'
  server.flag [:C, :config]

  #-P, --pidfile PATH
  server.desc 'Path to pidfile'
  server.arg_name 'PATH'
  server.flag [:P, :pidfile]

  #-L, --logfile PATH
  server.desc 'Path to writable logfile'
  server.arg_name 'PATH'
  server.flag [:L, :logfile]

  #-d, --daemon
  server.desc 'Deamonize process'
  server.switch [:d, :daemon]

  #-v, --verbose
  server.desc 'Print more verbose output'
  server.switch [:v, :verbose]
end

pre do |global, command, options, args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

begin
  exit run(ARGV)
rescue
  $stdout.puts "Bye."
end
